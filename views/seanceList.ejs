<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        .container{
            width: calc(100% - 200px);
            margin-left: 300px;
            margin-top: 30px;
        }
        .seanceItem{
            font-size: 15px;
            font-weight: 500;
            color: rgb(255, 255, 255);
        }

        .seanceList{
            display: flex;
            flex-direction: column;
        }

        .item{
            border-radius: 10px;
            margin-bottom: 10px;
            max-width: 85%;
            display: flex;
            flex-direction: row;
            padding-top: 10px;
            padding-bottom: 10px;
            padding-left: 10px;
            list-style: none;
            box-shadow: 2px 1px 2px 0 rgb(0, 0, 0, 0.5);
            background-color: rgb(0, 41, 95);

        }
        .seance{
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .detail{
            margin-left: 700px;
            border-radius: 15px;
            font-size: 12px;
            font-weight: 500;
            color: rgb(255, 255, 255);
            background: none;
            border: none;
            box-shadow: 1px 2px 2px 0 grey;
            padding: 10px;
            font-size: 14px;
            font-weight: 400;
            
            
        }
        
        
        .detail:hover{
            margin-left: 700px;
            border-radius: 15px;
            font-size: 12px;
            font-weight: 300;
            color: rgb(87, 87, 87);
            background: white;
            transition: 0.5s ease;
            border: none;
            box-shadow: 1px 2px 2px 0 grey;
            padding: 10px;
            font-size: 14px;
            font-weight: 400;
            
            
        }
        .detailContainer{
            position: fixed;
            top:30%;
            left: 60%;
            transform: translate(-50%, -50%) scale(0);
            transition: 200mx ease-in-out;
            border: none;
            border-radius: 10px;
            z-index: 10;
            background-color: white;
            width: 920px;
            height: 50vh;
            box-shadow: 2px 0px 2px 0 rgb(0, 0, 0, 0.5);

            
        }

        .detailContainerHeader{
            padding: 10px 15px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid rgb(133, 133, 133);
        }

        .detailContainerHeader h5{
            font-size: 18px;
            font-weight: bold;
        }

        .detailContainerHeader .close-btn{
            cursor:  pointer;
            border: none;
            outline: none;
            background: none;
            font-size: 1.2;
            font-weight: normal;
            color: rgb(0, 41, 95);
        }

        .detailContainerBody{
            padding: 10px 15px ;
        }
        .detailContainer.active{
            transform: translate(-50%, -50%) scale(1);
        }
        .background{
            position: fixed;
            width: 100%;
            height: 100%;
            background-color: rgba(255, 255, 255, 0);
            pointer-events: none;
            z-index: 1;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .background.active{
            pointer-events: all;
            opacity: 1;
        }

        .desc{
            margin-bottom: 10px;
            font-size: 15px;
        }
        span{
            font-weight: bold;
            font-size: 12px;
        }
        .detailContainerFooter{
            margin-left: 200px;
            margin-top: 20px;
            margin-bottom: 10px;
            display: flex;
            align-items: center;
        }
        .detailContainerFooter button{
            margin-right: 5px;
            padding: 10px;
            border-radius: 10px;
            color: white;
            border: rgb(175, 175, 175);
            font-family: 'Poppins';
        }
        .btn-modifier{
            background-color: rgb(83, 83, 177);
            width: 100px;
            font-size: 12px;

        }

        .btn-supprimer{
            background-color: rgb(255, 44, 44);
            font-size: 12px;
        }
        .btn-save{
            font-size: 12px;
            background-color: rgb(122, 122, 122);
            width: 100px;
        }

        .btn-modifier:hover, .btn-supprimer:hover, .btn-save:hover{
            background-color: rgb(255, 255, 255);
            color: rgb(82, 82, 82);
            transition: 0.5s ease;
            box-shadow: 2px 1px 5px 0 rgb(0, 0, 0, 0.5);

        }
        .close-btn{
            font-size: 25px;
        }
        .avancement{
            margin-left: 45px;
            width: 80%;
            font-weight: 400;
            font-size: 15px;
            color: rgb(0, 41, 95);
            border-bottom: 1px solid rgb(190, 190, 190) ;

        }
        .ajouter{
            margin-left: 45px;
            font-size: 12px;
        }
        .span-title{
            font-weight: 300;
            font-size: 15px;
            color: rgb(0, 41, 95);
        }

        .noSeance{
            margin-left: 45px;
        }
       

        


    </style>
</head>
<body>
    <%- include('sideBarProf') %>
    <div class="container">
        <h2 class="avancement">Séances</h2>
        <% console.log(seanceList) %>
        <% if (seanceList.length > 0) { %>
            <div class="seances">
                <ol class="seanceList">
                <% for (let i = 0; i < seanceList.length; i++) { %>
                    <div class="item" id="<%= seanceList[i].id %>">
                        <div class="seance">
                            <li class="seanceItem" data="<%= seanceList[i].id %>"> Séance <%= seanceList[i].numero %> </li>
                            <button data-detail-target="#container<%= i %>" data-background-target="#background<%= i %>" class="detail" >Voir détail...</button>    

                        </div>
                        <div class="detailContainer" id="container<%= i %>">
                            <div class="detailContainerHeader">
                                <span class="span-title">Séance <span id="numero"><%= seanceList[i].numero %></span></span>
                                <button  data-background-target="#background<%= i %>" class="close-btn">&times;</button>
                            </div>
                            <div class="detailContainerBody">
                                <li class="desc">Le <span id="date"> <%= seanceList[i].date %> </span></li>
                                <li class="desc">De <span id="hd"> <%= seanceList[i].hd %> </span>A <span id="hf"> <%= seanceList[i].hf %> </span> </li>
                                <li class="desc">Objectifs :<span id="obj">  <%= seanceList[i].obj %> </span></li>
                                <li class="desc">Remarques :<span id="rmq">  <%= seanceList[i].rmq %> </span></li>
                            </div>
                            
                            <% if (coursListParFiliere.reduce((cours) => cours.idcours == seanceList[i].idcours )){ %>
                                <div class="detailContainerFooter">
                                </div>    
                            <% }else{ %>
                                <div class="detailContainerFooter">
                                    <button  data-course = '<%= courseId %> ' data-index="<%= seanceList[i].id %>" class="btn-modifier" id="button<%= i %>">Modifier</button>
                                    <button  data-index="<%= seanceList[i].id %>" class="btn-supprimer" id="buttonSupprimer<%= i %>" >Supprimer</button>
                                    <button data-index="<%= i %>" class="btn-save" >Save</button>
                                </div>                               
                            <% } %>
                        </div>
                    </div>
                    <div class="background" id="background<%= i %>"></div>
                <% } %>
                </ol>
            </div>
        <% } else { %>
            <h5 class="noSeance">Aucune séance n'est ajoutée</h5>
        <% } %>
          

        <button class='ajouter' onclick="ajouterSeance('<%= courseId %>')">Ajouter</button>

    </div>

    <script>



        function ajouterSeance(courseId){
            location.href = '/seance/' + courseId
        }

        var seanceItems = document.querySelectorAll('.seanceItem');
        var opendetailButtons = document.querySelectorAll('.detail');
        var closedetailButtons = document.querySelectorAll('.close-btn')
        var background = document.querySelectorAll('.background')
        var modifierButtons = document.querySelectorAll('.btn-modifier');
        var saveButtons = document.querySelectorAll('.btn-save')
        var supprimerButtons = document.querySelectorAll('.btn-supprimer')

        opendetailButtons.forEach(element => {
            element.addEventListener('click', () => {
                const container = document.querySelector(element.dataset.detailTarget)
                const background = document.querySelector(element.dataset.backgroundTarget);
                openDetail(container);
            } )
        });

        closedetailButtons.forEach(element => {
            element.addEventListener('click', () => {
                const container = element.closest('.detailContainer')
                closeDetail(container);
            } )
        });

        function openDetail(container){
            if (container == null) return 
            container.classList.add('active')
        }

        function closeDetail(container){
            if (container == null) return
            container.classList.remove('active')
        }


        supprimerButtons.forEach
        ((button) => {
            button.addEventListener('click', () => {
                const courseId = button.dataset.course
                const seanceId = button.dataset.index;
                console.log(button.dataset.index)
                console.log('------------------!from fetch seance delete', seanceId)

                const seanceElement = button.closest('.item');
                console.log('seance element', seanceElement)
                if (seanceElement) {
                    seanceElement.remove();
                }
                fetch(`/seance/${seanceId}`, {
                    method: 'DELETE'
                    })
                    .then()
                    .then( response => {
                        if (response.ok) {
                        // Remove the corresponding HTML element
                        if (seanceElement) {
                            seanceElement.remove();
                        }
                        if (courseId) {
                            location.href = `/seanceList/${courseId}`;
                        } else {
                            console.log('Failed to retrieve courseId');
                        }
                        
                        } else {
                        console.log('Failed to delete seance');
                        }
                    })
                    .catch(error => {
                        console.error(error);
                    });
                })
            });
                
               
            
        

        

        modifierButtons.forEach(button => {
            button.addEventListener('click', () => {
                const seanceId = button.dataset.index;
                const courseId = button.dataset.course

                const numeroSpan = document.getElementById("numero")
                const dateSpan = document.getElementById("date");
                const hdSpan = document.getElementById("hd");
                const hfSpan = document.getElementById("hf");
                const objSpan = document.getElementById("obj");
                const rmqSpan = document.getElementById("rmq");

                // Replace the content with input fields
                numeroSpan.innerHTML = `<input type="number" id="inputNumero" value="${numeroSpan.innerText}">`
                dateSpan.innerHTML = `<input type="date" id="inputDate" value="${dateSpan.innerText}">`;
                hdSpan.innerHTML = `<input type="time" id="inputHd" value="${hdSpan.innerText}">`;
                hfSpan.innerHTML = `<input type="time" id="inputHf" value="${hfSpan.innerText}">`;
                objSpan.innerHTML = `<input type="text" id="inputObj" value="${objSpan.innerText}">`;
                rmqSpan.innerHTML = `<input type="text" id="inputRmq" value="${rmqSpan.innerText}">`;
                // Make an AJAX request to update the user data

                const numero = document.getElementById("inputNumero");
                const date = document.getElementById("inputDate");
                const hd = document.getElementById("inputHd");
                const hf = document.getElementById("inputHf");
                const obj = document.getElementById("inputObj");
                const rmq = document.getElementById("inputRmq");

                saveButtons.forEach(button => {
                    button.addEventListener("click", () => {
                    // Make a POST request to /updateProfile endpoint
                        fetch(`/seance/${seanceId}`,  {
                            method: 'PUT',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                id: seanceId,
                                date: date.value,
                                hf: hd.value,
                                hd: hf.value,
                                obj: obj.value,
                                rmq: rmq.value,
                                numero : numero.value
                            })

                        })
                        .then(response => response.text())
                        .then(() => { 
                        
                        const inputNumero = numero.value
                        const inputDate = date.value;
                        const inputHd = hd.value;
                        const inputHf = hf.value;
                        const inputObj = obj.value;
                        const inputRmq = rmq.value;

                        numeroSpan.innerHTML = `<span id="numero">${inputNumero}</span>`;
                        dateSpan.innerHTML = `<span id="date">${inputDate}</span>`;
                        hdSpan.innerHTML = `<span id="hd">${inputHd}</span>`;
                        hfSpan.innerHTML = `<span id="hf">${inputHf}</span>`;
                        objSpan.innerHTML = `<span id="obj">${inputObj}</span>`;
                        rmqSpan.innerHTML = `<span id="rmq">${inputRmq}</span>`;

                        if (courseId) {
                                location.href = `/seanceList/${courseId}`;
                        } else {
                                console.log('Failed to retrieve courseId');
                        }

                        
                        

                            
                        })
                        .catch(error => {
                        console.error(error);
                    
                        });
                
                    })
                })
            })
        })


        

    </script>


    
</body>
</html>